---
import { LANGUAGES, useTranslations } from '@i18n/ui';
import { getRelativePath, useRelativeUrl } from '@i18n/utils';
import WorldIcon from '@icons/WorldIcon.astro';
import { twMerge } from 'tailwind-merge';
const { currentLocale } = Astro;
const t = useTranslations(currentLocale);
const { class: className } = Astro.props;

const currentLanguage = LANGUAGES[Astro.currentLocale ?? 'es'];
const otherLanguages = Object.values(LANGUAGES).filter(
  (lang) => lang.code !== currentLanguage.code,
);

const currentRelativeUrl = getRelativePath(Astro);

const translatePath = useRelativeUrl(Astro.currentLocale);
// ▼▽ ▶▷
---

<button
  class={twMerge(
    'fixed top-16 left-0 select-none z-50 cursor-default group',
    className,
  )}
  aria-hidden='true'
>
  <!-- <div class='relative'> -->
  <div
    id='lang-sel'
    class='bg-slate-500/15 focus:py-2 py-3 px-1 rounded-r-md cursor-pointer'
    aria-label={t('change_language')}
  >
    <WorldIcon />
    <!-- <span class='block group-focus:rotate-90 pr-px'>▶</span> -->
  </div>
  <ul
    class:list={[
      'group-focus:block',
      // 'group-focus:flex-col',
      // 'group-focus:justify-center',
      'group-focus:animate-fade-down',
      'group-focus:animate-duration-400',
      'group-focus:animate-delay-[210ms]',
    ]}
  >
    <li class='bg-gray-600/70 border-2 border-white/30'>
      {currentLanguage.label}
    </li>
    {
      otherLanguages.map((lang) => (
        <a
          class=''
          href={translatePath(currentRelativeUrl, lang.code)}
          aria-label={`Translate to ${lang.label}`}
          title={`Translate to ${lang.label}`}
        >
          <li class='bg-slate-800/40 hover:bg-slate-600/70 border-[1px] border-slate-500/70'>
            {lang.label}
          </li>
        </a>
      ))
    }
  </ul>
  <!-- </div> -->
</button>

<style>
  div {
    width: 45px;
    transition-property: padding, width;
    transition-duration: 350ms;
    display: flex;
    gap: 0.3rem;
    justify-content: center;
    align-items: center;
    backdrop-filter: blur(3px);
  }

  button:focus > div {
    padding: 0.5rem 1rem;
    width: 100%;
    backdrop-filter: blur(5px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    /* min-width: 67px; */
  }

  span {
    transition-duration: 400ms;
  }

  ul {
    display: none;
    margin-top: 10px;
    margin-left: 0.5rem;
    margin-right: 0.25rem;
    /* position: absolute;
    bottom: -100%; */
    /* background-color: red; */
  }

  li {
    padding: 0.5rem 1rem;
    /* background-color: rgb(30 64 175 / 0.15); */
    border-radius: 0.125rem;
    margin-bottom: 0.45rem;
    backdrop-filter: blur(5px);
    /* width: 50px;
    height: 50px; */
  }

  ul:active {
    display: block;
  }
</style>
